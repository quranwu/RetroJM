// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// Egudenintg1hesscpp
double Egudenintg1hesscpp(NumericVector thetam, NumericVector alphaX, NumericVector gammaX, NumericVector PsiX, double ti, NumericVector yi, NumericVector Xi, double Ai, NumericVector tstari, NumericVector beta_mu_vec, NumericVector beta_A_vec, NumericVector beta_mu_Ui_vec, NumericVector beta_A_Ui_vec, NumericVector knots, double t_end, double sty_end, NumericVector surv_knots, NumericVector drop_knots, NumericVector surv_par_0, NumericVector surv_par_1, NumericVector drop_par_0, NumericVector drop_par_1, double tol, List nodes, List weights);
RcppExport SEXP _RetroJM_Egudenintg1hesscpp(SEXP thetamSEXP, SEXP alphaXSEXP, SEXP gammaXSEXP, SEXP PsiXSEXP, SEXP tiSEXP, SEXP yiSEXP, SEXP XiSEXP, SEXP AiSEXP, SEXP tstariSEXP, SEXP beta_mu_vecSEXP, SEXP beta_A_vecSEXP, SEXP beta_mu_Ui_vecSEXP, SEXP beta_A_Ui_vecSEXP, SEXP knotsSEXP, SEXP t_endSEXP, SEXP sty_endSEXP, SEXP surv_knotsSEXP, SEXP drop_knotsSEXP, SEXP surv_par_0SEXP, SEXP surv_par_1SEXP, SEXP drop_par_0SEXP, SEXP drop_par_1SEXP, SEXP tolSEXP, SEXP nodesSEXP, SEXP weightsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type thetam(thetamSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type alphaX(alphaXSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type gammaX(gammaXSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type PsiX(PsiXSEXP);
    Rcpp::traits::input_parameter< double >::type ti(tiSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type yi(yiSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Xi(XiSEXP);
    Rcpp::traits::input_parameter< double >::type Ai(AiSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tstari(tstariSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type beta_mu_vec(beta_mu_vecSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type beta_A_vec(beta_A_vecSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type beta_mu_Ui_vec(beta_mu_Ui_vecSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type beta_A_Ui_vec(beta_A_Ui_vecSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type knots(knotsSEXP);
    Rcpp::traits::input_parameter< double >::type t_end(t_endSEXP);
    Rcpp::traits::input_parameter< double >::type sty_end(sty_endSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type surv_knots(surv_knotsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type drop_knots(drop_knotsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type surv_par_0(surv_par_0SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type surv_par_1(surv_par_1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type drop_par_0(drop_par_0SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type drop_par_1(drop_par_1SEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< List >::type nodes(nodesSEXP);
    Rcpp::traits::input_parameter< List >::type weights(weightsSEXP);
    rcpp_result_gen = Rcpp::wrap(Egudenintg1hesscpp(thetam, alphaX, gammaX, PsiX, ti, yi, Xi, Ai, tstari, beta_mu_vec, beta_A_vec, beta_mu_Ui_vec, beta_A_Ui_vec, knots, t_end, sty_end, surv_knots, drop_knots, surv_par_0, surv_par_1, drop_par_0, drop_par_1, tol, nodes, weights));
    return rcpp_result_gen;
END_RCPP
}
// Egudenintg2hesscpp
double Egudenintg2hesscpp(NumericVector thetam, NumericVector alphaX, NumericVector gammaX, NumericVector PsiX, double ti, NumericVector yi, NumericVector Xi, double Ai, NumericVector tstari, NumericVector longi_t, NumericVector beta_mu_vec, NumericVector beta_A_vec, NumericVector beta_mu_Ui_vec, NumericVector beta_A_Ui_vec, NumericVector knots, double t_end, double sty_end, NumericVector surv_knots, NumericVector drop_knots, NumericVector surv_par_0, NumericVector surv_par_1, NumericVector drop_par_0, NumericVector drop_par_1, double tol, List nodes, List weights);
RcppExport SEXP _RetroJM_Egudenintg2hesscpp(SEXP thetamSEXP, SEXP alphaXSEXP, SEXP gammaXSEXP, SEXP PsiXSEXP, SEXP tiSEXP, SEXP yiSEXP, SEXP XiSEXP, SEXP AiSEXP, SEXP tstariSEXP, SEXP longi_tSEXP, SEXP beta_mu_vecSEXP, SEXP beta_A_vecSEXP, SEXP beta_mu_Ui_vecSEXP, SEXP beta_A_Ui_vecSEXP, SEXP knotsSEXP, SEXP t_endSEXP, SEXP sty_endSEXP, SEXP surv_knotsSEXP, SEXP drop_knotsSEXP, SEXP surv_par_0SEXP, SEXP surv_par_1SEXP, SEXP drop_par_0SEXP, SEXP drop_par_1SEXP, SEXP tolSEXP, SEXP nodesSEXP, SEXP weightsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type thetam(thetamSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type alphaX(alphaXSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type gammaX(gammaXSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type PsiX(PsiXSEXP);
    Rcpp::traits::input_parameter< double >::type ti(tiSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type yi(yiSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Xi(XiSEXP);
    Rcpp::traits::input_parameter< double >::type Ai(AiSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tstari(tstariSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type longi_t(longi_tSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type beta_mu_vec(beta_mu_vecSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type beta_A_vec(beta_A_vecSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type beta_mu_Ui_vec(beta_mu_Ui_vecSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type beta_A_Ui_vec(beta_A_Ui_vecSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type knots(knotsSEXP);
    Rcpp::traits::input_parameter< double >::type t_end(t_endSEXP);
    Rcpp::traits::input_parameter< double >::type sty_end(sty_endSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type surv_knots(surv_knotsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type drop_knots(drop_knotsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type surv_par_0(surv_par_0SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type surv_par_1(surv_par_1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type drop_par_0(drop_par_0SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type drop_par_1(drop_par_1SEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< List >::type nodes(nodesSEXP);
    Rcpp::traits::input_parameter< List >::type weights(weightsSEXP);
    rcpp_result_gen = Rcpp::wrap(Egudenintg2hesscpp(thetam, alphaX, gammaX, PsiX, ti, yi, Xi, Ai, tstari, longi_t, beta_mu_vec, beta_A_vec, beta_mu_Ui_vec, beta_A_Ui_vec, knots, t_end, sty_end, surv_knots, drop_knots, surv_par_0, surv_par_1, drop_par_0, drop_par_1, tol, nodes, weights));
    return rcpp_result_gen;
END_RCPP
}
// Egudenintg3hesscpp
double Egudenintg3hesscpp(NumericVector thetam, NumericVector alphaX, NumericVector gammaX, NumericVector PsiX, double ti, NumericVector yi, NumericVector Xi, double Ai, NumericVector tstari, NumericVector longi_t, NumericVector beta_mu_vec, NumericVector beta_A_vec, NumericVector beta_mu_Ui_vec, NumericVector beta_A_Ui_vec, NumericVector knots, double t_end, double sty_end, NumericVector surv_knots, NumericVector drop_knots, NumericVector surv_par_0, NumericVector surv_par_1, NumericVector drop_par_0, NumericVector drop_par_1, double tol, List nodes, List weights);
RcppExport SEXP _RetroJM_Egudenintg3hesscpp(SEXP thetamSEXP, SEXP alphaXSEXP, SEXP gammaXSEXP, SEXP PsiXSEXP, SEXP tiSEXP, SEXP yiSEXP, SEXP XiSEXP, SEXP AiSEXP, SEXP tstariSEXP, SEXP longi_tSEXP, SEXP beta_mu_vecSEXP, SEXP beta_A_vecSEXP, SEXP beta_mu_Ui_vecSEXP, SEXP beta_A_Ui_vecSEXP, SEXP knotsSEXP, SEXP t_endSEXP, SEXP sty_endSEXP, SEXP surv_knotsSEXP, SEXP drop_knotsSEXP, SEXP surv_par_0SEXP, SEXP surv_par_1SEXP, SEXP drop_par_0SEXP, SEXP drop_par_1SEXP, SEXP tolSEXP, SEXP nodesSEXP, SEXP weightsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type thetam(thetamSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type alphaX(alphaXSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type gammaX(gammaXSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type PsiX(PsiXSEXP);
    Rcpp::traits::input_parameter< double >::type ti(tiSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type yi(yiSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Xi(XiSEXP);
    Rcpp::traits::input_parameter< double >::type Ai(AiSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type tstari(tstariSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type longi_t(longi_tSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type beta_mu_vec(beta_mu_vecSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type beta_A_vec(beta_A_vecSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type beta_mu_Ui_vec(beta_mu_Ui_vecSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type beta_A_Ui_vec(beta_A_Ui_vecSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type knots(knotsSEXP);
    Rcpp::traits::input_parameter< double >::type t_end(t_endSEXP);
    Rcpp::traits::input_parameter< double >::type sty_end(sty_endSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type surv_knots(surv_knotsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type drop_knots(drop_knotsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type surv_par_0(surv_par_0SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type surv_par_1(surv_par_1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type drop_par_0(drop_par_0SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type drop_par_1(drop_par_1SEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< List >::type nodes(nodesSEXP);
    Rcpp::traits::input_parameter< List >::type weights(weightsSEXP);
    rcpp_result_gen = Rcpp::wrap(Egudenintg3hesscpp(thetam, alphaX, gammaX, PsiX, ti, yi, Xi, Ai, tstari, longi_t, beta_mu_vec, beta_A_vec, beta_mu_Ui_vec, beta_A_Ui_vec, knots, t_end, sty_end, surv_knots, drop_knots, surv_par_0, surv_par_1, drop_par_0, drop_par_1, tol, nodes, weights));
    return rcpp_result_gen;
END_RCPP
}
// Egudenintg4hesscpp
double Egudenintg4hesscpp(NumericVector thetam, NumericVector alphaX, NumericVector gammaX, NumericVector PsiX, double ti, NumericVector Xi, double Ai, double sty_end, NumericVector surv_knots, NumericVector drop_knots, NumericVector surv_par_0, NumericVector surv_par_1, NumericVector drop_par_0, NumericVector drop_par_1, double tol, List nodes, List weights);
RcppExport SEXP _RetroJM_Egudenintg4hesscpp(SEXP thetamSEXP, SEXP alphaXSEXP, SEXP gammaXSEXP, SEXP PsiXSEXP, SEXP tiSEXP, SEXP XiSEXP, SEXP AiSEXP, SEXP sty_endSEXP, SEXP surv_knotsSEXP, SEXP drop_knotsSEXP, SEXP surv_par_0SEXP, SEXP surv_par_1SEXP, SEXP drop_par_0SEXP, SEXP drop_par_1SEXP, SEXP tolSEXP, SEXP nodesSEXP, SEXP weightsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type thetam(thetamSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type alphaX(alphaXSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type gammaX(gammaXSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type PsiX(PsiXSEXP);
    Rcpp::traits::input_parameter< double >::type ti(tiSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Xi(XiSEXP);
    Rcpp::traits::input_parameter< double >::type Ai(AiSEXP);
    Rcpp::traits::input_parameter< double >::type sty_end(sty_endSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type surv_knots(surv_knotsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type drop_knots(drop_knotsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type surv_par_0(surv_par_0SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type surv_par_1(surv_par_1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type drop_par_0(drop_par_0SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type drop_par_1(drop_par_1SEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< List >::type nodes(nodesSEXP);
    Rcpp::traits::input_parameter< List >::type weights(weightsSEXP);
    rcpp_result_gen = Rcpp::wrap(Egudenintg4hesscpp(thetam, alphaX, gammaX, PsiX, ti, Xi, Ai, sty_end, surv_knots, drop_knots, surv_par_0, surv_par_1, drop_par_0, drop_par_1, tol, nodes, weights));
    return rcpp_result_gen;
END_RCPP
}
// Egudenintg5hesscpp
double Egudenintg5hesscpp(NumericVector thetam, NumericVector alphaX, NumericVector gammaX, NumericVector PsiX, double ti, NumericVector Xi, double Ai, double sty_end, NumericVector surv_knots, NumericVector drop_knots, NumericVector surv_par_0, NumericVector surv_par_1, NumericVector drop_par_0, NumericVector drop_par_1, double tol, List nodes, List weights);
RcppExport SEXP _RetroJM_Egudenintg5hesscpp(SEXP thetamSEXP, SEXP alphaXSEXP, SEXP gammaXSEXP, SEXP PsiXSEXP, SEXP tiSEXP, SEXP XiSEXP, SEXP AiSEXP, SEXP sty_endSEXP, SEXP surv_knotsSEXP, SEXP drop_knotsSEXP, SEXP surv_par_0SEXP, SEXP surv_par_1SEXP, SEXP drop_par_0SEXP, SEXP drop_par_1SEXP, SEXP tolSEXP, SEXP nodesSEXP, SEXP weightsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type thetam(thetamSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type alphaX(alphaXSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type gammaX(gammaXSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type PsiX(PsiXSEXP);
    Rcpp::traits::input_parameter< double >::type ti(tiSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Xi(XiSEXP);
    Rcpp::traits::input_parameter< double >::type Ai(AiSEXP);
    Rcpp::traits::input_parameter< double >::type sty_end(sty_endSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type surv_knots(surv_knotsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type drop_knots(drop_knotsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type surv_par_0(surv_par_0SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type surv_par_1(surv_par_1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type drop_par_0(drop_par_0SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type drop_par_1(drop_par_1SEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< List >::type nodes(nodesSEXP);
    Rcpp::traits::input_parameter< List >::type weights(weightsSEXP);
    rcpp_result_gen = Rcpp::wrap(Egudenintg5hesscpp(thetam, alphaX, gammaX, PsiX, ti, Xi, Ai, sty_end, surv_knots, drop_knots, surv_par_0, surv_par_1, drop_par_0, drop_par_1, tol, nodes, weights));
    return rcpp_result_gen;
END_RCPP
}
// Egudenintg6hesscpp
double Egudenintg6hesscpp(NumericVector thetam, NumericVector alphaX, NumericVector gammaX, NumericVector PsiX, double ti, NumericVector Xi, double Ai, double sty_end, NumericVector surv_knots, NumericVector drop_knots, NumericVector surv_par_0, NumericVector surv_par_1, NumericVector drop_par_0, NumericVector drop_par_1, double tol, List nodes, List weights);
RcppExport SEXP _RetroJM_Egudenintg6hesscpp(SEXP thetamSEXP, SEXP alphaXSEXP, SEXP gammaXSEXP, SEXP PsiXSEXP, SEXP tiSEXP, SEXP XiSEXP, SEXP AiSEXP, SEXP sty_endSEXP, SEXP surv_knotsSEXP, SEXP drop_knotsSEXP, SEXP surv_par_0SEXP, SEXP surv_par_1SEXP, SEXP drop_par_0SEXP, SEXP drop_par_1SEXP, SEXP tolSEXP, SEXP nodesSEXP, SEXP weightsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type thetam(thetamSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type alphaX(alphaXSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type gammaX(gammaXSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type PsiX(PsiXSEXP);
    Rcpp::traits::input_parameter< double >::type ti(tiSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type Xi(XiSEXP);
    Rcpp::traits::input_parameter< double >::type Ai(AiSEXP);
    Rcpp::traits::input_parameter< double >::type sty_end(sty_endSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type surv_knots(surv_knotsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type drop_knots(drop_knotsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type surv_par_0(surv_par_0SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type surv_par_1(surv_par_1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type drop_par_0(drop_par_0SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type drop_par_1(drop_par_1SEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< List >::type nodes(nodesSEXP);
    Rcpp::traits::input_parameter< List >::type weights(weightsSEXP);
    rcpp_result_gen = Rcpp::wrap(Egudenintg6hesscpp(thetam, alphaX, gammaX, PsiX, ti, Xi, Ai, sty_end, surv_knots, drop_knots, surv_par_0, surv_par_1, drop_par_0, drop_par_1, tol, nodes, weights));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_RetroJM_Egudenintg1hesscpp", (DL_FUNC) &_RetroJM_Egudenintg1hesscpp, 25},
    {"_RetroJM_Egudenintg2hesscpp", (DL_FUNC) &_RetroJM_Egudenintg2hesscpp, 26},
    {"_RetroJM_Egudenintg3hesscpp", (DL_FUNC) &_RetroJM_Egudenintg3hesscpp, 26},
    {"_RetroJM_Egudenintg4hesscpp", (DL_FUNC) &_RetroJM_Egudenintg4hesscpp, 17},
    {"_RetroJM_Egudenintg5hesscpp", (DL_FUNC) &_RetroJM_Egudenintg5hesscpp, 17},
    {"_RetroJM_Egudenintg6hesscpp", (DL_FUNC) &_RetroJM_Egudenintg6hesscpp, 17},
    {NULL, NULL, 0}
};

RcppExport void R_init_RetroJM(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
